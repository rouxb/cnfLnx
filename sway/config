### Configuration file for sway window manager
# target keyboard layout dvorak programmer
# Read `man 5 sway` for configuration details
###

### Windows title and border {{{
default_border pixel 1
# }}}

### Variables {{{
# Mod keys. [Mod1: Alt, Mod4: Super] {{{
set $mod Mod4
set $moda Mod1
# }}}

# Home row direction keys, like vim {{{
set $up c
set $down t
set $left h
set $right n
# }}}


# }}}

# Applications {{{
# set $term gnome-terminal
set $term alacritty -t Term -e /bin/bash
set $lock  ~/.local/bin/scripts/lock.sh
set $power ~/.config/rofi/modi/power
set $wifi  ~/.config/rofi/modi/nmcli
set $menu rofi -m $(expr $(swaymsg -t get_tree | jq '.nodes | map([recurse(.nodes[]?, .floating_nodes[]?) | .focused] | any) | index(true)') - 1) -show drun -run-command 'swaymsg exec -- {cmd}'
set $screenshot grim ~/Images/screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png
set $screenclip slurp | grim -g - ~/Images/screenshots/scrn-$(date +"%Y-%m-%d-%H-%M-%S").png
# }}}

### Outputs configuration {{{
# You can get the names of your outputs by running: swaymsg -t get_outputs
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/f29/default/normalish/f29.png fill

# Native display {{{
set $dsp_native eDP-1
output $dsp_native position 0,0
# }}}
# Dock display {{{
set $dsp_dock DP-3
output $dsp_dock position 1920,0
# }}}
# }}}

### Idle configuration {{{
#
# TODO
#
#exec swayidle \
#    timeout 300 'swaylock -c 000000' \
#    timeout 600 'swaymsg "output * dpms off"' \
#       resume 'swaymsg "output * dpms on"' \
#    before-sleep 'swaylock -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# }}}

### Input configuration {{{
  # UHK keyboard {{{
  input "7504:24866:Ultimate_Gadget_Laboratories_Ultimate_Hacking_Keyboard" {
          xkb_layout us
          xkb_variant dvp
  }
  # }}}
  # Dell keyboard {{{
  input "1:1:AT_Translated_Set_2_keyboard" {
          xkb_layout us
          xkb_variant dvp
  }
  # }}}
  # Dell Touchpad {{{
  # }}}

  input "2:14:SynPS/2_Synaptics_TouchPad" {
      dwt enabled
      tap enabled
      natural_scroll enabled
      middle_emulation enabled
      pointer_accel 0.3
      accel_profile adaptive
  }
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
# }}}

### Key bindings {{{
# Basics {{{
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+c kill

    # start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+r reload

    # exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
# }}}

# Moving around {{{
    # Move your focus around {{{
    # uhk
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or native arrow
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right
    # }}}
    # Moved focus windows around {{{
    # uhk
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    # bindsym $mod+Shift+$up move up # Conflit with kill
    bindsym $mod+Shift+$right move right
    # or nativ arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
    # }}}
# }}}

# Workspaces {{{
    # Workspace Name {{{
    set $tag~ "0:@"
    set $tag% "1:%"
    set $tag7 "2:7"
    set $tag5 "3:5"
    set $tag3 "4:3"
    set $tag1 "5:1"
    set $tag9 "6:9"
    set $tag0 "7:0"
    set $tag2 "8:2"
    set $tag4 "9:4"
    set $tag6 "10:6"
    set $tag8 "11:web"
    set $tag# "12:#"
    # }}}
    # switch to workspace {{{
    bindsym $mod+dollar       workspace $tag~
    bindsym $mod+ampersand    workspace $tag%
    bindsym $mod+bracketleft  workspace $tag7
    bindsym $mod+braceleft    workspace $tag5
    bindsym $mod+braceright   workspace $tag3
    bindsym $mod+parenleft    workspace $tag1
    bindsym $mod+equal        workspace $tag9
    bindsym $mod+asterisk     workspace $tag0
    bindsym $mod+parenright   workspace $tag2
    bindsym $mod+plus         workspace $tag4
    bindsym $mod+bracketright workspace $tag6
    bindsym $mod+exclam       workspace $tag8
    bindsym $mod+numbersign   workspace $tag#
    bindsym $mod+l            workspace back_and_forth
    # }}}
    # move focused container to workspace {{{
    bindsym $mod+Shift+dollar       move container to workspace $tag~
    bindsym $mod+Shift+ampersand    move container to workspace $tag%
    bindsym $mod+Shift+bracketleft  move container to workspace $tag7
    bindsym $mod+Shift+braceleft    move container to workspace $tag5
    bindsym $mod+Shift+braceright   move container to workspace $tag3
    bindsym $mod+Shift+parenleft    move container to workspace $tag1
    bindsym $mod+Shift+equal        move container to workspace $tag9
    bindsym $mod+Shift+asterisk     move container to workspace $tag0
    bindsym $mod+Shift+parenright   move container to workspace $tag2
    bindsym $mod+Shift+plus         move container to workspace $tag4
    bindsym $mod+Shift+bracketright move container to workspace $tag6
    bindsym $mod+Shift+exclam       move container to workspace $tag8
    bindsym $mod+Shift+numbersign   move container to workspace $tag#
    # }}}

  # Layout {{{
  # Native Screen
  workspace $tag~ output $dsp_native
  workspace $tag% output $dsp_native
  workspace $tag7 output $dsp_native
  workspace $tag5 output $dsp_native
  workspace $tag3 output $dsp_native
  workspace $tag1 output $dsp_native
  workspace $tag9 output $dsp_native
  # Dock Screen
  workspace $tag0 output $dsp_dock
  workspace $tag2 output $dsp_dock
  workspace $tag4 output $dsp_dock
  workspace $tag6 output $dsp_dock
  workspace $tag8 output $dsp_dock
  workspace $tag# output $dsp_dock
  # }}}
# }}}

# Layout stuff {{{
    # Split container
    bindsym $mod+s splith
    bindsym $mod+v splitv

    # Containter layout
    # bindsym $mod+dot layout stacking
    bindsym $mod+comma     layout tabbed
    bindsym $mod+semicolon layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen
    popup_during_fullscreen leave_fullscreen

    # Tilling or floating
    bindsym $mod+Shift+space exec swaymsg floating toggle # Toggle mode
    bindsym $mod+space focus mode_toggle # Swap between tiling and floating

    # focus the parent container
    bindsym $mod+a focus parent
    # focus the child container
    bindsym $mod+o focus child
# }}}

# Scratchpad {{{
# TODO
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
# }}}

# Resizing containers {{{
mode "resize" {
    # uhk
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px
    # or native arrow
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
# }}}
# }}}

# Status Bar {{{
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    font pango:DejaVu Sans Mono for Powerline 10
    strip_workspace_numbers yes
    colors {
        statusline #ffffff
        background #000000
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
    # status_command ~/.config/sway/bumblebee-status/bumblebee-status -m cpu memory battery pasink pasource dnf taskwarrior date time -p time.format="%H:%M CW %V" date.format="%a, %b %d %Y" -t iceberg-dark-powerline
    status_command ~/.config/sway/bumblebee-status/bumblebee-status -m cpu memory date time weather pasink pasource spacer battery -p time.format="%H:%M CW %V" date.format="%a, %b %d %Y" -t solarized-powerline
}
# }}}

# Backend applications {{{
# Notifications
exec mako --anchor top-right
# }}}

# TODO
include /etc/sway/config.d/*

